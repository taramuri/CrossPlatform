// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lab6.Data;

#nullable disable

namespace lab6.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("lab6.Models.Artefact", b =>
                {
                    b.Property<int>("Artefact_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Artefact_ID"));

                    b.Property<string>("Artefact_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Artefact_ID");

                    b.ToTable("Artefacts");
                });

            modelBuilder.Entity("lab6.Models.Channel", b =>
                {
                    b.Property<int>("Channel_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Channel_ID"));

                    b.Property<string>("Channel_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Channel_ID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("lab6.Models.Customer", b =>
                {
                    b.Property<int>("Customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Customer_ID"));

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Gender_MFU")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Customer_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("lab6.Models.CustomerDataPlatform", b =>
                {
                    b.Property<string>("Platform_Code")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Customer_Platform_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Platform_Code");

                    b.HasIndex("Platform_Code")
                        .IsUnique();

                    b.ToTable("CustomerDataPlatforms");
                });

            modelBuilder.Entity("lab6.Models.Document", b =>
                {
                    b.Property<int>("Document_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Document_ID"));

                    b.Property<string>("Document_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Document_Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Document_Type_Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("Event_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Document_ID");

                    b.HasIndex("Document_Type_Code");

                    b.HasIndex("Event_ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("lab6.Models.Event", b =>
                {
                    b.Property<int>("Event_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Event_ID"));

                    b.Property<int?>("Artefact_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Booking_Date_From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Booking_Date_To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Channel_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Customer_ID")
                        .HasColumnType("integer");

                    b.Property<decimal>("Event_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Event_Date_Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Event_Sequence_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Location_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Platform_Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Service_Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("Staff_ID")
                        .HasColumnType("integer");

                    b.HasKey("Event_ID");

                    b.HasIndex("Artefact_ID");

                    b.HasIndex("Channel_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Event_Sequence_ID");

                    b.HasIndex("Location_ID");

                    b.HasIndex("Staff_ID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("lab6.Models.EventSequence", b =>
                {
                    b.Property<int>("Event_Sequence_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Event_Sequence_ID"));

                    b.Property<string>("Book_Hotel")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Check_Out_Pay")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Event_Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("Event_Date_Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Next_Event_Sequence_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Event_Sequence_ID");

                    b.HasIndex("Next_Event_Sequence_ID");

                    b.ToTable("EventSequences");
                });

            modelBuilder.Entity("lab6.Models.GenericService", b =>
                {
                    b.Property<string>("Service_Code")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Service_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Service_Code");

                    b.HasIndex("Service_Code")
                        .IsUnique();

                    b.ToTable("GenericServices");
                });

            modelBuilder.Entity("lab6.Models.Location", b =>
                {
                    b.Property<int>("Location_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Location_ID"));

                    b.Property<string>("Location_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Location_ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("lab6.Models.Payment", b =>
                {
                    b.Property<int>("Payment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Payment_ID"));

                    b.Property<int>("Event_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Payment_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Payment_Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Payment_ID");

                    b.HasIndex("Event_ID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("lab6.Models.Platform", b =>
                {
                    b.Property<string>("Platform_Code")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Asset_Mgt")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Hotel")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Platform_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Platform_Code");

                    b.HasIndex("Platform_Code")
                        .IsUnique();

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("lab6.Models.ProductService", b =>
                {
                    b.Property<string>("Prod_Service_Code")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Prod_Service_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Supplier_ID")
                        .HasColumnType("integer");

                    b.HasKey("Prod_Service_Code");

                    b.HasIndex("Prod_Service_Code")
                        .IsUnique();

                    b.HasIndex("Supplier_ID");

                    b.ToTable("ProductServices");
                });

            modelBuilder.Entity("lab6.Models.RefDocumentType", b =>
                {
                    b.Property<string>("Document_Type_Code")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Document_Type_Category")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Document_Type_Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Document_Type_Code");

                    b.HasIndex("Document_Type_Code")
                        .IsUnique();

                    b.ToTable("RefDocumentTypes");
                });

            modelBuilder.Entity("lab6.Models.Staff", b =>
                {
                    b.Property<int>("Staff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Staff_ID"));

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Staff_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Staff_ID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("lab6.Models.Supplier", b =>
                {
                    b.Property<int>("Supplier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Supplier_ID"));

                    b.Property<string>("Other_Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Supplier_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Supplier_ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("lab6.Models.Document", b =>
                {
                    b.HasOne("lab6.Models.RefDocumentType", "DocumentType")
                        .WithMany("Documents")
                        .HasForeignKey("Document_Type_Code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("lab6.Models.Event", "Event")
                        .WithMany("Documents")
                        .HasForeignKey("Event_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("lab6.Models.Event", b =>
                {
                    b.HasOne("lab6.Models.Artefact", "Artefact")
                        .WithMany("Events")
                        .HasForeignKey("Artefact_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("lab6.Models.Channel", "Channel")
                        .WithMany("Events")
                        .HasForeignKey("Channel_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("lab6.Models.Customer", "Customer")
                        .WithMany("Events")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("lab6.Models.EventSequence", "EventSequence")
                        .WithMany("Events")
                        .HasForeignKey("Event_Sequence_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("lab6.Models.Location", "Location")
                        .WithMany("Events")
                        .HasForeignKey("Location_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("lab6.Models.Staff", "Staff")
                        .WithMany("Events")
                        .HasForeignKey("Staff_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artefact");

                    b.Navigation("Channel");

                    b.Navigation("Customer");

                    b.Navigation("EventSequence");

                    b.Navigation("Location");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("lab6.Models.EventSequence", b =>
                {
                    b.HasOne("lab6.Models.EventSequence", "NextSequence")
                        .WithMany()
                        .HasForeignKey("Next_Event_Sequence_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NextSequence");
                });

            modelBuilder.Entity("lab6.Models.Payment", b =>
                {
                    b.HasOne("lab6.Models.Event", "Event")
                        .WithMany("Payments")
                        .HasForeignKey("Event_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("lab6.Models.ProductService", b =>
                {
                    b.HasOne("lab6.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("Supplier_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("lab6.Models.Artefact", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("lab6.Models.Channel", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("lab6.Models.Customer", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("lab6.Models.Event", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("lab6.Models.EventSequence", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("lab6.Models.Location", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("lab6.Models.RefDocumentType", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("lab6.Models.Staff", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("lab6.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
